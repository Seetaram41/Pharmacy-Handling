
import DataBaseOperation.DbConnection;
import DataBaseOperation.PharmacyUtils;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import common.OpenPdf;
import java.io.FileOutputStream;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Seeta Ram
 */
public class SellMedicine extends javax.swing.JFrame {

    private String username = "";
    private String billId = "";
    private String numberPattern = "^[0-9]*$";
    private int finalTotalPrice = 0;

    /**
     * Creates new form SellMedicine
     */
    public SellMedicine() {
        initComponents();
    }

    public SellMedicine(String tempUsername) {
        initComponents();
        username = tempUsername;
        setLocationRelativeTo(null);
    }

    public void getMedicine(String nameOrMedicineId) {
        DefaultTableModel model = (DefaultTableModel) madicineTable.getModel();
        model.setRowCount(0);
        try {
            Connection con = DbConnection.getCon();
            String sql = "select *from Medicine where name like '" + nameOrMedicineId + "%' or uniqueId like '" + nameOrMedicineId + "%'";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("uniqueId") + " -  " + rs.getString("name")});
            }
        } catch (Exception e) {
        }
    }

    public void clearMedicine() {
        txtMedicineId.setText("");
        txtName.setText("");
        txtCompanyName.setText("");
        txtUnit.setText("");
        txtPerUnitPrice.setText("");
        txtTotalPrice.setText("");
    }
    public String uniqueId(String Prefix){
        return Prefix + System.nanoTime();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtSearchMedicine = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMedicineId = new javax.swing.JTextField();
        txtUnit = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPerUnitPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        txtCompanyName = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAddToCart = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        madicineTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txtFinalTotalPrice = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sell Medicine");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(579, 6, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1321, 14, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 60, 1328, 10));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, -1, -1));

        txtSearchMedicine.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtSearchMedicine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchMedicineKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearchMedicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 350, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Medicine ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 82, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Unit");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 160, -1, -1));

        txtMedicineId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtMedicineId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicineIdActionPerformed(evt);
            }
        });
        getContentPane().add(txtMedicineId, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 114, 320, -1));

        txtUnit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUnitKeyReleased(evt);
            }
        });
        getContentPane().add(txtUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 200, 320, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 158, -1, -1));

        txtName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 196, 320, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Price Per Unit");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 80, -1, -1));

        txtPerUnitPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtPerUnitPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerUnitPriceActionPerformed(evt);
            }
        });
        getContentPane().add(txtPerUnitPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 110, 320, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Company Name");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 236, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total Price");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 236, -1, -1));

        txtTotalPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 274, 320, -1));

        txtCompanyName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtCompanyName, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 274, 320, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add to cart.png"))); // NOI18N
        jButton2.setText("Add To Card");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1161, 323, -1, -1));

        tableAddToCart.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tableAddToCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Name ", "Company Name", "Price Per Unit", "No. Of Unit", "Total Price"
            }
        ));
        tableAddToCart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAddToCartMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableAddToCart);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 397, 709, 260));

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/generate bill & print.png"))); // NOI18N
        jButton3.setText("Purchase&Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 680, -1, -1));

        madicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID"
            }
        ));
        madicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                madicineTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(madicineTable);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, 490));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("RS :");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 710, -1, -1));

        txtFinalTotalPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtFinalTotalPrice.setForeground(new java.awt.Color(255, 255, 255));
        txtFinalTotalPrice.setText("00.00");
        getContentPane().add(txtFinalTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 710, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/adminDashboardBackground.png"))); // NOI18N
        jLabel9.setText("jLabel9");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtMedicineIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicineIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicineIdActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        getMedicine("");
        txtMedicineId.setEditable(false);
        txtName.setEditable(false);
        txtCompanyName.setEditable(false);
        txtPerUnitPrice.setEditable(false);
        txtTotalPrice.setEditable(false);
    }//GEN-LAST:event_formComponentShown

    private void txtSearchMedicineKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchMedicineKeyReleased
        String search = txtSearchMedicine.getText();
        getMedicine(search);
    }//GEN-LAST:event_txtSearchMedicineKeyReleased

    private void madicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_madicineTableMouseClicked
        int index = madicineTable.getSelectedRow();
        TableModel model = madicineTable.getModel();
        String nameOrUniqueId = model.getValueAt(index, 0).toString();
        String uniqueId[] = nameOrUniqueId.split("-", 0);
        try {
            Connection con = DbConnection.getCon();
            PreparedStatement ps = con.prepareStatement("select*from medicine where uniqueId = " + uniqueId[0] + "");
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                txtMedicineId.setText(rs.getString("uniqueID"));
                txtName.setText(rs.getString("name"));
                txtCompanyName.setText(rs.getString("companyName"));
                txtPerUnitPrice.setText(rs.getString("price"));
                txtUnit.setText("");
                txtTotalPrice.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_madicineTableMouseClicked

    private void txtPerUnitPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerUnitPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerUnitPriceActionPerformed

    private void txtUnitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnitKeyReleased
        String noOfUnit = txtUnit.getText();
        if (!txtUnit.equals("")) {
            String rate = txtPerUnitPrice.getText();
            if (!noOfUnit.matches(numberPattern)) {
                JOptionPane.showMessageDialog(null, "Enter Valid Number");
            }
            int totalPrice = Integer.parseInt(rate) * Integer.parseInt(noOfUnit);
            txtTotalPrice.setText(String.valueOf(totalPrice));
        } else {
            txtTotalPrice.setText("");
        }
    }//GEN-LAST:event_txtUnitKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String noOfUnit = txtUnit.getText();
        String medicineId = txtMedicineId.getText();

        if (!noOfUnit.equals("") && !medicineId.equals("")) {
            String name = txtName.getText();
            String compantName = txtCompanyName.getText();
            String perUnitPrice = txtPerUnitPrice.getText();
            String totalPrice = txtTotalPrice.getText();
            int checkStock = 0;
            int checkMedicineAlraedyExist = 0;
            try {
                Connection con = DbConnection.getCon();
                PreparedStatement ps = con.prepareStatement("Select*from medicine where uniqueId = " + medicineId + "");
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    if (Integer.parseInt(rs.getString("quantity")) >= Integer.parseInt(noOfUnit)) {
                        checkStock = 1;
                    } else {
                        JOptionPane.showMessageDialog(null, "Medicine Out of stock. Only " + rs.getString("quantity") + " Left");
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            if (checkStock == 1) {
                DefaultTableModel dtm = (DefaultTableModel) tableAddToCart.getModel();
                if (dtm.getRowCount() > 0) {
                    for (int i = 0; i < dtm.getRowCount(); i++) {
                        if (Integer.parseInt(dtm.getValueAt(i, 0).toString()) == Integer.parseInt(medicineId)) {
                           checkMedicineAlraedyExist =1;
                           JOptionPane.showMessageDialog(null, "Medicine Alredy Exist in a cart");
                           
                        }
                    }
                }
                if(checkMedicineAlraedyExist==0){
                dtm.addRow(new Object[]{medicineId,name,compantName,perUnitPrice,noOfUnit,totalPrice});
                finalTotalPrice +=Integer.parseInt(totalPrice);
                txtFinalTotalPrice.setText(String.valueOf(finalTotalPrice));
                JOptionPane.showMessageDialog(null, "Medicine Added Successfully");
                }
                clearMedicine();
            }   
        }
        else{
            JOptionPane.showMessageDialog(null, "No Of Unit And Medicine Id is required");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       if(finalTotalPrice!=0){
           billId = uniqueId("Bill- ");
           DefaultTableModel dtm = (DefaultTableModel)tableAddToCart.getModel();
           if(tableAddToCart.getRowCount()!=0){
               for(int i=0;i<tableAddToCart.getRowCount();i++){
                   try {
                       Connection con = DbConnection.getCon();
                       PreparedStatement ps = con.prepareStatement("Update Medicine Set quantity =quantity-"+Integer.parseInt(dtm.getValueAt(i, 4).toString())+" where uniqueId = "+dtm.getValueAt(i, 0).toString()+"");
                       ps.executeUpdate();
                   } catch (Exception e) {
                       JOptionPane.showMessageDialog(null, e);
                   }
               }
           }
           SimpleDateFormat sdf = new SimpleDateFormat("dd--mm--yyyy");
           Calendar cal = Calendar.getInstance();
           try {
                Connection con = DbConnection.getCon();
                PreparedStatement ps = con.prepareStatement("insert into Bill(billId ,billDate,Totalpaid, generatedBill) values(?,?,?,?)");
                ps.setString(1, billId);
                ps.setString(2, sdf.format(cal.getTime()));
                ps.setString(3, String.valueOf(finalTotalPrice));
                ps.setString(4,username);
                ps.executeUpdate();
           } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
           }
           
           com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
           try {
               PdfWriter.getInstance(doc, new FileOutputStream(PharmacyUtils.billPath+""+billId+".pdf"));
               doc.open();
               Paragraph pharmacy = new Paragraph("                                            Pharmacy Handling");
               doc.add(pharmacy);
               
               Paragraph startLine = new Paragraph("***************************************************************");
               doc.add(startLine);
               
               Paragraph details =new Paragraph("\tBIll ID: "+billId+"\nGenerated By: "+username+"\nDate: "+ new Date()+"\nTotal Amount: "+finalTotalPrice);
               doc.add(details);
               doc.add(startLine);
               
               PdfPTable tb1 = new PdfPTable(6);
               tb1.addCell("Medicine Id");
               tb1.addCell("Medicine Name");
               tb1.addCell("Company Name");
               tb1.addCell("Price Per Unit");
               tb1.addCell("Buy Uuit");
               tb1.addCell("Amount");
               for(int i =0;i<tableAddToCart.getRowCount();i++){
                   String a = tableAddToCart.getValueAt(i, 0).toString();
                   String b = tableAddToCart.getValueAt(i, 1).toString();
                   String c = tableAddToCart.getValueAt(i, 2).toString();
                   String d = tableAddToCart.getValueAt(i, 3).toString();
                   String e = tableAddToCart.getValueAt(i, 4).toString();
                   String f = tableAddToCart.getValueAt(i, 5).toString();
                   
                   tb1.addCell(a);
                   tb1.addCell(b);
                   tb1.addCell(c);
                   tb1.addCell(d);
                   tb1.addCell(e);
                   tb1.addCell(f);  
                   
               }
               doc.add(tb1);
               doc.add(startLine);
               
               Paragraph thanksMsg = new Paragraph("Thank You Please Visit again");
               doc.add(thanksMsg);
               OpenPdf.openById(String.valueOf(billId));
           } 
           catch (Exception e) {
               JOptionPane.showMessageDialog(null, e);
           }
           doc.close();
           setVisible(false);
           new SellMedicine(username).setVisible(true);
       }
       else{
           JOptionPane.showMessageDialog(null, "Please Purchase At least One Medicine");
       }
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tableAddToCartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAddToCartMouseClicked
        int index = tableAddToCart.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do you Want to delete medicine from Cart","select",JOptionPane.YES_NO_OPTION);
        if(a==0){
            TableModel model = tableAddToCart.getModel();
            String total = (String)model.getValueAt(index, 5);
            finalTotalPrice-=Integer.parseInt(total);
            txtFinalTotalPrice.setText(String.valueOf(finalTotalPrice));
            ((DefaultTableModel)tableAddToCart.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_tableAddToCartMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable madicineTable;
    private javax.swing.JTable tableAddToCart;
    private javax.swing.JTextField txtCompanyName;
    private javax.swing.JLabel txtFinalTotalPrice;
    private javax.swing.JTextField txtMedicineId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPerUnitPrice;
    private javax.swing.JTextField txtSearchMedicine;
    private javax.swing.JTextField txtTotalPrice;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables
}
